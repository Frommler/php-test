<?php 
/*Задачи для решения
        Работа с переменными
1)Создайте переменную $a и присвойте ей значение 3. Выведите значение этой переменной на экран.*/
echo "1) ". $a = 3 ."<br>";

/*2)Создайте переменные $a=10 и $b=2. Выведите на экран их сумму, разность, произведение и частное (результат деления).*/
  $a = 10;
  $b = 2;
  echo "2) ". ($a + $b)."-".($a - $b)."-".($a * $b)."-".($a / $b) ."<br>";
/* 3)Создайте переменные $c=15 и $d=2. Просуммируйте их, а результат присвойте переменной $result. Выведите на экран значение переменной $result.*/
  $c = 15;
  $d = 2;
  echo "3) ". $result = $c + $d ."<br>";
/* 4) Создайте переменные $a=10, $b=2 и $c=5. Выведите на экран их сумму.*/
  echo "4) ".($a + $b + $c) ."<br>";
/* 5) Создайте переменные $a=17 и $b=10. Отнимите от $a переменную $b и результат присвойте переменной $c. Затем создайте переменную $d, присвойте ей значение 7. Сложите переменные $c и $d, а результат запишите в переменную $result. Выведите на экран значение переменной $result.*/

  $a = 17;
  $b = 10;
  $c = $a - $b;
  $d = 7;
  echo "5) ".$result = $c + $d ."<br>";

/*         Работа со строками
6) Создайте переменную $text и присвойте ей значение 'Привет, Мир!'. Выведите значение этой переменной на экран.*/

  echo "6) " .$text = "Hi, World!" ."<br>";

/* 7)Создайте переменные $text1='Привет, ' и $text2='Мир!'. С помощью этих переменных и операции сложения строк выведите на экран фразу 'Привет, Мир!'.*/

  $text1 = "Hi,";
  $text2 = "World!!!";
  echo "7) " .$text1 . $text2 ."<br>";

/* 8)Создайте переменную $name и присвойте ей ваше имя. Выведите на экран фразу 'Привет, %Имя%!'. Вместо %Имя% должно стоять ваше имя.*/

  $name = "Alexandr";
  echo "8) "."Hi,".$name. "!"."<br>";

/* 9)Создайте переменную $age и присвойте ей ваш возраст. Выведите на экран 'Мне %Возраст% лет!'.*/

  $age = 34;
  echo "9) "."I`am, ".$age. " y.o."."<br>";

/*         Обращение к символам строки
10)Создайте переменную $text и присвойте ей значение 'abcde'. Обращаясь к отдельным символам этой строки выведите на экран символ 'a', символ 'c', символ 'e'.*/

  $text = "abcde";
  echo "10) ". $text[0] . " ";
  echo $text[2] . " ";
  echo $text[4] ."<br>";

/* 11)Дана произвольная строка, например, 'abcde'. Поменяйте первую букву (то есть букву 'a') этой строки на '!'.*/

  $text11 = "abcde";
  $text11[0] = "!";
  echo  "11) ". $text11 ."<br>";

/* 12)Создайте переменную $num и присвойте ей значение '12345'. Найдите сумму цифр этого числа.*/

  $num = "1234124124151515155";
  for ($i=0; $i < strlen($num) ; $i++) { 
    $result += $num[$i];
  };
  echo "12) ".$result ."<br>";

/* Практика
13)Напишите скрипт, который считает количество секунд в часе, в сутках, в месяце.*/

echo "13) Sec in an hour - ".$secInH = 60 * 60 ." & ";
echo "Sec in a day - ".$secInDay = $secInH * 24 ." & ";
echo "Sec in a month - ".$secInM = $secInDay * 30 ."<br>";

/* 14)Создайте три переменные - час, минута, секунда. С их помощью выведите текущее время в формате 'час:минута:секунда'.*/
  $time = localtime();
  echo "14)  Sec is: " . $sec = $time[0] . " & ";
  echo "Min is: " . $min = $time[1] . " & ";
  echo "Hour is: " . $hour = $time[2] - 2 /*my local time*/ . "<br>";


/* 15)Создайте переменную, присвойте ей число. Возведите это число в квадрат (это значит нужно умножить его само на себя). Выведите его на экран.*/
  $num = 18;
  echo "15) " .  ($num *= $num) . "<br>";

                /* Работа с присваиванием и декрементами
16)Переделайте этот код так, чтобы в нем использовались операции +=, -=, *=, /=. Количество строк кода при этом не должно измениться.*/

$var = 47;
$var += 7;
$var -= 18;
$var *= 10;
$var /= 20;
echo "16) " . $var. "<br>";

/* 17) Переделайте этот код так, чтобы в нем использовалась операция .=. Количество строк кода при этом не должно измениться.*/

$text = 'I';
$text .= ' want';
$text .= ' to know';
$text .= ' PHP!';
echo  "17) " . $text . "<br>";

/* 18) Переделайте этот код так, чтобы в нем использовались операции ++ и --. Количество строк кода при этом не должно измениться.*/

$var = 10;
echo "18) ";
echo $var++;
echo " , ";
echo ++$var;
echo " , ";
echo --$var;
echo "<br>";

/* 19) Переделайте этот код так, чтобы в нем использовались операции ++, -- , +=, -=, *=, /=. Количество строк кода при этом не должно измениться.*/

$var = 10;
echo "19) ";
echo $var += 7;
echo ", ";
echo ++$var;
echo ", ";
echo --$var;
echo ", ";
echo $var += 12;
echo ", ";
echo $var *= 7;
echo ", ";
echo $var -= 15;
echo ", ";
echo $var; 
echo "<br>";

                                //Работа с массивами
// 20) Создайте массив $arr=['a', 'b', 'c']. Выведите значение массива на экран с помощью функции var_dump().
  $array = ['a', 'b', 'c'];
  echo  "20) ";
  var_dump($array);
  echo "<br>";
// 21) С помощью массива $arr из предыдущего номера выведите на экран содержимое первого, второго и третьего элементов.

echo  "21) A is - " . $array[0] . ", B is - " . $array[1] . ", C is - " . $array[2] . "<br>";

// 22) Создайте массив $arr=['a', 'b', 'c', 'd'] и с его помощью выведите на экран строку 'a+b, c+d'.

  $array1 = ['a', 'b', 'c', 'd'];
  echo "22) A + B is - " . $array1[0] . $array1[1] . ", C + D is - " . $array1[2] . $array1[3] . "<br>";

// 23) Создайте массив $arr с элементами 2, 5, 3, 9. Умножьте первый элемент массива на второй, а третий элемент на четвертый. Результаты сложите, присвойте переменной $result. Выведите на экран значение этой переменной.

  $array2 = [2, 5, 3, 9];
  echo "23) ";
  echo $array2[0] * $array2[1] + $array2[2] * $array2[3];
  echo "<br>";
// 24) Заполните массив $arr числами от 1 до 5. Не объявляйте массив, а просто заполните его присваиванием $arr[] = новое значение.

  for ($i=0; $i < 5; $i++) { 
    $array3[] = $i;
  };
  echo "24) ";
  var_dump($array3);
  echo "<br>";

                                //Ассоциативные массивы
// 25) Создайте массив $arr. Выведите на экран элемент с ключом 'c'.
$array4 = ['a'=>11, 'b'=>22, 'c'=>33];
echo  "25) " . $array4['c'] . "<br>";
// 26) Создайте массив $arr. Найдите сумму элементов этого массива.

$array5 = ['a'=>1, 'b'=>2, 'c'=>3];
echo  "26) " . array_sum($array5) . "<br>";

// 27) Создайте массив заработных плат $arr. Выведите на экран зарплату Пети и Коли.

$array6 = ['Коля'=>'1000$', 'Вася'=>'500$', 'Петя'=>'200$'];
echo  "27) " . $array6['Петя'] . " & " . $array6['Коля'] . "<br>";

// 28) Создайте ассоциативный массив дней недели. Ключами в нем должны служить номера дней от начала недели (понедельник - должен иметь ключ 1, вторник - 2 и т.д.). Выведите на экран текущий день недели.

$array7 = ['1'=>'monday', '2'=>'tuesday', '3'=>'wednesday', '4'=>'thursday', '5'=>'friday', '6'=>'saturday', '7'=>'sunday'];
echo "28) " . $array7['7'] . "<br>";

// 29) Пусть теперь номер дня недели хранится в переменной $day, например там лежит число 3. Выведите день недели, соответствующий значению переменной $day.

$day = 3;
echo "29) " . $array7[$day] . "<br>";

                                  //Многомерные массивы
// 30) Создайте многомерный массив $arr. С его помощью выведите на экран слова 'joomla', 'drupal', 'зеленый', 'красный'.

$array8 = [
	'cms'=>['joomla', 'wordpress', 'drupal'],
	'colors'=>['blue'=>'голубой', 'red'=>'красный', 'green'=>'зеленый']
];
echo "30) " . $array8['cms'][0] . "," . $array8['cms'][1] . "," . $array8['colors']['green'] . "," . $array8['colors']['red'] . "<br>";

// 31) Создайте двухмерный массив. Первые два ключа - это 'ru' и 'en'. Пусть первый ключ содержит элемент, являющийся массивом названий дней недели по-русски, а второй - по-английски. Выведите с помощью этого массива понедельник по-русски и среду по английски (пусть понедельник - это первый день).

$array9 = [
  'ru' => ['понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота', 'воскресение'] ,
  'en' => ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday']
];

echo "31) " . $array9['ru'][0] . "," . $array9['en'][2] . "<br>";

//                                               Работа с if-else
// 32) Если переменная $a равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

  if ($a == 0) {
    echo  "32) Ok <br>";
  } else {
    echo  "32) Error <br>";
  };

 // 33) Если переменная $a больше нуля, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

 if ($a > 0) {
   echo   "33) ok <br>";
 } else {
  echo "33) Error <br>";
 };

 // 34) Если переменная $a меньше нуля, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

 if ($a < 0) {
  echo   "34) ok <br>";
} else {
 echo "34) Error <br>";
};

 // 35) Если переменная $a больше или равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

 if ($a >= 0) {
  echo   "35) ok <br>";
} else {
 echo "35) Error <br>";
};

 // 36) Если переменная $a меньше или равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

 if ($a <= 0) {
  echo   "36) ok <br>";
} else {
 echo "36) Error <br>";
};

 // 37) Если переменная $a не равна нулю, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 0, -3.

 if ($a != 0) {
  echo   "37) ok <br>";
} else {
 echo "37) Error <br>";
};

 // 38) Если переменная $a равна 'test', то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 'test', 'тест', 3.

 if ($a == 'test') {
  echo   "38) ok <br>";
} else {
 echo "38) Error <br>";
};

 // 39) Если переменная $a равна '1' и по значению и по типу, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном '1', 1, 3.

 if ($a === '1') {
  echo   "39) ok <br>";
} else {
 echo "39) Error <br>";
};

//                                        Работа с empty и isset
// 40)  Если переменная $a пустая, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 1, 3, -3, 0, null, true, '', '0'.



 // 41) Если переменная $a НЕ пустая, то выведите 'Верно', иначе выведите 'Неверно'.

 // 42) Если переменная $a существует, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 3 и null.

 // 43) Если переменная $a НЕ существует, то выведите 'Верно', иначе выведите 'Неверно'.

//                                        Работа с логическими переменными
 // 44) Если переменная $var равна true, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $var, равном true, false. Напишите два варианта скрипта - с короткой записью и с длинной.

 // 45) Если переменная $var НЕ равна true, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $var, равном true, false. Напишите два варианта скрипта - с короткой записью и с длинной.

//                                           Работа с OR и AND
 // 46) Если переменная $a больше нуля и меньше 5-ти, то выведите 'Верно', иначе выведите 'Неверно'. Проверьте работу скрипта при $a, равном 5, 0, -3, 2.

 // 47) Если переменная $a равна нулю или равна двум, то прибавьте к ней 7, иначе поделите ее на 10. Выведите новое значение переменной на экран. Проверьте работу скрипта при $a, равном 5, 0, -3, 2.

 // 48) Если переменная $a равна или меньше 1, а переменная $b больше или равна 3, то выведите сумму этих переменных, иначе выведите их разность (результат вычитания). Проверьте работу скрипта при $a и $b, равном 1 и 3, 0 и 6, 3 и 5.

 // 49) Если переменная $a больше 2-х и меньше 11-ти, или переменная $b больше или равна 6-ти и меньше 14-ти, то выведите 'Верно', в противном случае выведите 'Неверно'.

//                       На switch-case
// 50)   Переменная $num может принимать одно из значений: 1, 2, 3 или 4. Если она имеет значение '1', то в переменную $result запишем 'зима', если имеет значение '2' – 'лето' и так далее. Решите задачу через switch-case.

// 51)                                           Задачи
 // 52) В переменной $day лежит какое-то число из интервала от 1 до 31. Определите в какую декаду месяца попадает это число (в первую, вторую или третью).

 // 53) В переменной $month лежит какое-то число из интервала от 1 до 12. Определите в какую пору года попадает этот месяц (зима, лето, весна, осень).

 // 54) В переменной $year хранится год. Определите, является ли он високосным (в таком году есть 29 февраля). Год будет високосным в двух случаях: либо он делится на 4, но при этом не делится на 100, либо делится на 400. Так, годы 1700, 1800 и 1900 не являются високосными, так как они делятся на 100 и не делятся на 400. Годы 1600 и 2000 - високосные, так как они делятся на 400.

 // 55) Дана строка с символами, например, 'abcde'. Проверьте, что первым символом этой строки является буква 'a'. Если это так - выведите 'да', в противном случае выведите 'нет'.

 // 56) Дана строка с цифрами, например, '12345'. Проверьте, что первым символом этой строки является цифра 1, 2 или 3. Если это так - выведите 'да', в противном случае выведите 'нет'.

 // 57) Дана строка из 3-х цифр. Найдите сумму этих цифр. То есть сложите как числа первый символ строки, второй и третий.

 // 58) Дана строка из 6-ти цифр. Проверьте, что сумма первых трех цифр равняется сумме вторых трех цифр. Если это так - выведите 'да', в противном случае выведите 'нет'.
